import { Question } from '@/features/mockInterviews/types/questions';

export const githubActionsQuestions: Question[] = [
  {
    id: 1,
    question: 'What is GitHub Actions?',
    code: '',
    options: [
      'A project management tool',
      'A CI/CD platform integrated with GitHub',
      'A version control system',
      'A cloud hosting service',
    ],
    correctAnswer: 1,
  },
  {
    id: 2,
    question: 'Where are GitHub Actions workflows defined?',
    code: '',
    options: ['In .github/workflows directory', 'In package.json', 'In Dockerfile', 'In README.md'],
    correctAnswer: 0,
  },
  {
    id: 3,
    question: 'What file format is used for GitHub Actions workflows?',
    code: '',
    options: ['YAML', 'JSON', 'TOML', 'XML'],
    correctAnswer: 0,
  },
  {
    id: 4,
    question: 'What is a GitHub Actions runner?',
    code: '',
    options: ['A server that executes workflows', 'A GitHub bot', 'A code review tool', 'A deployment script'],
    correctAnswer: 0,
  },
  {
    id: 5,
    question: 'What is the main component of a GitHub Actions workflow?',
    code: '',
    options: ['Jobs', 'Commits', 'Branches', 'Pull requests'],
    correctAnswer: 0,
  },
  {
    id: 6,
    question: 'Which keyword defines when a workflow should run?',
    code: '',
    options: ['on', 'when', 'trigger', 'run'],
    correctAnswer: 0,
  },
  {
    id: 7,
    question: 'What is a GitHub Actions self-hosted runner?',
    code: '',
    options: [
      'A runner you manage on your own infrastructure',
      'A GitHub-managed runner',
      'A virtual machine in the cloud',
      'A containerized application',
    ],
    correctAnswer: 0,
  },
  {
    id: 8,
    question: 'What is a GitHub Actions artifact?',
    code: '',
    options: [
      'Files produced by a workflow',
      'A historical repository',
      'A type of GitHub issue',
      'A security vulnerability',
    ],
    correctAnswer: 0,
  },
  {
    id: 9,
    question: 'How can you share data between jobs in a workflow?',
    code: '',
    options: ['Using artifacts', 'Using environment variables', 'Using GitHub Secrets', 'Using repository files'],
    correctAnswer: 0,
  },
  {
    id: 10,
    question: 'What is a GitHub Actions matrix strategy?',
    code: '',
    options: [
      'Running jobs with different configurations',
      'A security protocol',
      'A deployment pattern',
      'A repository structure',
    ],
    correctAnswer: 0,
  },
  {
    id: 11,
    question: 'How do you access GitHub Secrets in a workflow?',
    code: '',
    options: ['${{ secrets.SECRET_NAME }}', 'process.env.SECRET_NAME', 'config.secrets.SECRET_NAME', 'env.SECRET_NAME'],
    correctAnswer: 0,
  },
  {
    id: 12,
    question: 'What is the purpose of the GITHUB_TOKEN in workflows?',
    code: '',
    options: ['Authenticate with GitHub API', 'Access private repositories', 'Both of the above', 'None of the above'],
    correctAnswer: 2,
  },
  {
    id: 13,
    question: 'What is a GitHub Actions composite action?',
    code: '',
    options: [
      'A combination of multiple steps',
      'A Docker container action',
      'A JavaScript action',
      'A workflow trigger',
    ],
    correctAnswer: 0,
  },
  {
    id: 14,
    question: 'How can you manually trigger a workflow?',
    code: '',
    options: ['Using workflow_dispatch', 'Pushing to main branch', 'Creating a pull request', 'All of the above'],
    correctAnswer: 0,
  },
  {
    id: 15,
    question: 'What is the purpose of the "needs" keyword in workflows?',
    code: '',
    options: ['Define job dependencies', 'Install dependencies', 'Check requirements', 'Validate inputs'],
    correctAnswer: 0,
  },
  {
    id: 16,
    question: 'How can you cache dependencies in GitHub Actions?',
    code: '',
    options: ['Using actions/cache', 'Using artifacts', 'Using GitHub Packages', 'Using workflow variables'],
    correctAnswer: 0,
  },
  {
    id: 17,
    question: 'What is a GitHub Actions environment?',
    code: '',
    options: [
      'A target for deployment with protection rules',
      'A virtual machine configuration',
      'A container specification',
      'A programming language setup',
    ],
    correctAnswer: 0,
  },
  {
    id: 18,
    question: 'How do you access the GitHub context in workflows?',
    code: '',
    options: ['${{ github.event }}', 'context.github', 'process.github', 'env.GITHUB'],
    correctAnswer: 0,
  },
  {
    id: 19,
    question: 'What is a GitHub Actions reusable workflow?',
    code: '',
    options: [
      'A workflow that can be called by other workflows',
      'A template for new workflows',
      'A saved workflow configuration',
      'A workflow history',
    ],
    correctAnswer: 0,
  },
  {
    id: 20,
    question: 'How can you conditionally run a job or step?',
    code: '',
    options: ['Using if conditional', 'Using when clause', 'Using run_if parameter', 'Using condition block'],
    correctAnswer: 0,
  },
  {
    id: 21,
    question: 'What is the purpose of the concurrency keyword?',
    code: '',
    options: [
      'Control simultaneous runs of workflows/jobs',
      'Manage parallel steps',
      'Configure job resources',
      'Set workflow priorities',
    ],
    correctAnswer: 0,
  },
  {
    id: 22,
    question: 'How can you set up a cron job in GitHub Actions?',
    code: '',
    options: [
      'Using schedule event with cron syntax',
      'Using timer trigger',
      'Using cron job action',
      'Using workflow scheduler',
    ],
    correctAnswer: 0,
  },
  {
    id: 23,
    question: 'What is the purpose of the actions/checkout step?',
    code: '',
    options: ['Checkout your repository', 'Validate workflow syntax', 'Test code quality', 'Deploy application'],
    correctAnswer: 0,
  },
  {
    id: 24,
    question: 'How can you access runner environment variables?',
    code: '',
    options: ['${{ env.VAR_NAME }}', 'process.env.VAR_NAME', 'runner.env.VAR_NAME', 'context.env.VAR_NAME'],
    correctAnswer: 0,
  },
  {
    id: 25,
    question: 'What is a GitHub Actions custom action?',
    code: '',
    options: [
      'A reusable unit of code for workflows',
      'A workflow template',
      'A runner configuration',
      'A secret management tool',
    ],
    correctAnswer: 0,
  },
  {
    id: 26,
    question: 'How can you debug GitHub Actions workflows?',
    code: '',
    options: [
      'Enable step debug logging',
      'Check workflow runs in Actions tab',
      'Review runner logs',
      'All of the above',
    ],
    correctAnswer: 3,
  },
  {
    id: 27,
    question: 'What is the purpose of the paths-ignore filter?',
    code: '',
    options: [
      'Skip workflow when only specified files change',
      'Ignore files in artifact upload',
      'Exclude files from checkout',
      'Skip code scanning on certain files',
    ],
    correctAnswer: 0,
  },
  {
    id: 28,
    question: 'How can you share data between steps in a job?',
    code: '',
    options: ['Using environment variables', 'Using files in the workspace', 'Both of the above', 'None of the above'],
    correctAnswer: 2,
  },
  {
    id: 29,
    question: 'What is the purpose of the continue-on-error parameter?',
    code: '',
    options: ['Allow job to continue if step fails', 'Skip error checking', 'Ignore all errors', 'Retry failed steps'],
    correctAnswer: 0,
  },
  {
    id: 30,
    question: 'How can you manually rerun a failed workflow?',
    code: '',
    options: ['From the Actions tab in GitHub', 'Using the GitHub CLI', 'Both of the above', 'None of the above'],
    correctAnswer: 2,
  },
];
