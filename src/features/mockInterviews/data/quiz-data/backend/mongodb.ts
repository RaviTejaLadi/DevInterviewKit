import { Question } from '@/features/mockInterviews/types/questions';

export const mongoQuestions: Question[] = [
  {
    id: 1,
    question: 'What is MongoDB?',
    code: '',
    options: [
      'A relational database management system',
      'A NoSQL document database',
      'A graph database',
      'A key-value store',
    ],
    correctAnswer: 1,
  },
  {
    id: 2,
    question: 'Which of these is the correct way to connect to MongoDB in Node.js?',
    code: "const MongoClient = require('mongodb').MongoClient;",
    options: [
      'new MongoDB.connect(url)',
      'MongoClient.connect(url)',
      'MongoDB.createConnection(url)',
      'connectMongoDB(url)',
    ],
    correctAnswer: 1,
  },
  {
    id: 3,
    question: 'What is a document in MongoDB?',
    code: '',
    options: [
      'A PDF file stored in the database',
      'A record in a collection (BSON format)',
      'A table definition',
      'A schema blueprint',
    ],
    correctAnswer: 1,
  },
  {
    id: 4,
    question: 'How do you create a new collection in MongoDB?',
    code: 'use myDB',
    options: ["db.createCollection('users')", 'db.users.insert()', "db.makeCollection('users')", 'Both A and B'],
    correctAnswer: 3,
  },
  {
    id: 5,
    question: 'Which operator is used to update documents?',
    code: "db.users.updateOne({name: 'John'}, {$set: {age: 31}})",
    options: ['$change', '$update', '$set', '$modify'],
    correctAnswer: 2,
  },
  {
    id: 6,
    question: 'What is the purpose of the _id field in MongoDB?',
    code: '',
    options: [
      "It's optional for each document",
      'A unique identifier for each document',
      'Used only for relational references',
      'An automatically incrementing number',
    ],
    correctAnswer: 1,
  },
  {
    id: 7,
    question: 'How do you perform a case-insensitive search?',
    code: 'db.users.find({name: {$regex: /john/i}})',
    options: [
      "db.users.find({name: 'John'}).caseInsensitive(true)",
      'db.users.find({name: /john/i})',
      "db.users.find({name: {$caseInsensitive: 'John'}})",
      "db.users.find({name: {$i: 'John'}})",
    ],
    correctAnswer: 1,
  },
  {
    id: 8,
    question: 'What is sharding in MongoDB?',
    code: '',
    options: [
      'A backup technique',
      'A method for horizontal scaling across machines',
      'A type of index',
      'A data validation process',
    ],
    correctAnswer: 1,
  },
  {
    id: 9,
    question: 'Which method is used to create an index?',
    code: 'db.users.createIndex({email: 1})',
    options: ['db.users.makeIndex()', 'db.users.addIndex()', 'db.users.createIndex()', 'db.users.newIndex()'],
    correctAnswer: 2,
  },
  {
    id: 10,
    question: 'What is the MongoDB aggregation pipeline?',
    code: "db.users.aggregate([{$match: {age: {$gt: 30}}}, {$group: {_id: '$city', count: {$sum: 1}}}])",
    options: [
      'A sequence of data processing operations',
      'A backup and restore process',
      'A method for database compaction',
      'A sharding configuration tool',
    ],
    correctAnswer: 0,
  },
  {
    id: 11,
    question: 'Which operator is used to increment a value?',
    code: 'db.products.updateOne({_id: 1}, {$inc: {quantity: 5}})',
    options: ['$add', '$plus', '$inc', '$increase'],
    correctAnswer: 2,
  },
  {
    id: 12,
    question: 'How do you perform a left outer join in MongoDB?',
    code: '',
    options: ['$merge', '$lookup', '$join', '$combine'],
    correctAnswer: 1,
  },
  {
    id: 13,
    question: 'What is a replica set in MongoDB?',
    code: '',
    options: [
      'A backup copy of the database',
      'A set of documents with identical structure',
      'A group of mongod instances maintaining the same data',
      'A collection of indexes',
    ],
    correctAnswer: 2,
  },
  {
    id: 14,
    question: 'Which method deletes documents?',
    code: "db.users.deleteMany({status: 'inactive'})",
    options: ['db.users.remove()', 'db.users.drop()', 'db.users.delete()', 'Both A and C'],
    correctAnswer: 3,
  },
  {
    id: 15,
    question: 'What is the purpose of the $push operator?',
    code: "db.users.updateOne({_id: 1}, {$push: {hobbies: 'reading'}})",
    options: [
      'Adds an element to an array',
      'Creates a new collection',
      'Updates all matching documents',
      'Increments a value',
    ],
    correctAnswer: 0,
  },
  {
    id: 16,
    question: 'How do you sort query results?',
    code: 'db.users.find().sort({name: 1})',
    options: [
      "db.users.find().orderBy({name: 'asc'})",
      'db.users.find().sort({name: 1})',
      'db.users.find().arrange({name: 1})',
      'db.users.find().sequence({name: 1})',
    ],
    correctAnswer: 1,
  },
  {
    id: 17,
    question: 'What is the purpose of the $unset operator?',
    code: "db.users.updateOne({_id: 1}, {$unset: {tempField: ''}})",
    options: ['Removes a field from a document', 'Deletes a document', 'Clears an array', 'Drops a collection'],
    correctAnswer: 0,
  },
  {
    id: 18,
    question: 'Which method is used for text search?',
    code: "db.articles.find({$text: {$search: 'mongodb'}})",
    options: ['$findText', '$search', '$text', '$matchText'],
    correctAnswer: 2,
  },
  {
    id: 19,
    question: 'What is the purpose of the explain() method?',
    code: 'db.users.find().explain()',
    options: [
      'Provides documentation about a collection',
      'Shows query execution statistics',
      'Explains the database schema',
      'Validates documents',
    ],
    correctAnswer: 1,
  },
  {
    id: 20,
    question: 'How do you limit query results?',
    code: 'db.users.find().limit(5)',
    options: [
      'db.users.find().max(5)',
      'db.users.find().top(5)',
      'db.users.find().limit(5)',
      'db.users.find().first(5)',
    ],
    correctAnswer: 2,
  },
  {
    id: 21,
    question: 'What is the purpose of the $addToSet operator?',
    code: "db.users.updateOne({_id: 1}, {$addToSet: {tags: 'mongodb'}})",
    options: [
      "Adds an element to an array only if it doesn't exist",
      'Creates a new set collection',
      'Adds multiple elements to an array',
      'Combines two arrays',
    ],
    correctAnswer: 0,
  },
  {
    id: 22,
    question: 'Which operator is used for pagination?',
    code: 'db.users.find().skip(10).limit(5)',
    options: ['$page and $size', '$skip and $limit', '$offset and $count', '$start and $end'],
    correctAnswer: 1,
  },
  {
    id: 23,
    question: 'What is the purpose of the $exists operator?',
    code: 'db.users.find({email: {$exists: true}})',
    options: [
      'Checks if a database exists',
      'Tests for field existence in documents',
      'Verifies collection existence',
      'Checks if a user has permissions',
    ],
    correctAnswer: 1,
  },
  {
    id: 24,
    question: 'Which method is used to count documents?',
    code: "db.users.countDocuments({status: 'active'})",
    options: ['db.users.count()', 'db.users.total()', 'db.users.size()', 'All of the above'],
    correctAnswer: 3,
  },
  {
    id: 25,
    question: 'What is the purpose of the $elemMatch operator?',
    code: 'db.users.find({results: {$elemMatch: {score: {$gt: 80, $lt: 90}}}})',
    options: [
      'Matches elements in an array that meet multiple criteria',
      'Matches the first element in an array',
      'Creates a new array element',
      'Combines array elements',
    ],
    correctAnswer: 0,
  },
  {
    id: 26,
    question: 'How do you rename a field in MongoDB?',
    code: "db.users.updateMany({}, {$rename: {'oldName': 'newName'}})",
    options: ['$change', '$rename', '$modify', '$alter'],
    correctAnswer: 1,
  },
  {
    id: 27,
    question: 'What is the purpose of the $type operator?',
    code: "db.users.find({age: {$type: 'number'}})",
    options: [
      "Changes a field's data type",
      'Matches documents where a field is of a specified type',
      "Defines a collection's schema",
      'Converts between BSON and JSON',
    ],
    correctAnswer: 1,
  },
  {
    id: 28,
    question: 'Which method is used to create a capped collection?',
    code: "db.createCollection('logs', {capped: true, size: 100000})",
    options: [
      'db.newCappedCollection()',
      'db.createCappedCollection()',
      'db.createCollection() with options',
      'db.makeCappedCollection()',
    ],
    correctAnswer: 2,
  },
  {
    id: 29,
    question: 'What is the purpose of the $out aggregation stage?',
    code: "db.users.aggregate([{$match: {status: 'active'}}, {$out: 'active_users'}])",
    options: [
      'Outputs results to a file',
      'Writes results to a new collection',
      'Exports data to JSON',
      'Prints results to console',
    ],
    correctAnswer: 1,
  },
  {
    id: 30,
    question: 'Which command shows all databases?',
    code: '',
    options: ['db.list()', 'show dbs', 'db.showAll()', 'list databases'],
    correctAnswer: 1,
  },
];
