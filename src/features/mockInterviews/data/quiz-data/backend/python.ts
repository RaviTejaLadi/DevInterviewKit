import { Question } from '@/features/mockInterviews/types/questions';

export const pythonQuestions: Question[] = [
  {
    id: 1,
    question: 'What is Python?',
    code: "print('Hello, Python!')",
    options: [
      'A compiled, statically-typed language',
      'An interpreted, dynamically-typed language',
      'A markup language',
      'A database query language',
    ],
    correctAnswer: 1,
  },
  {
    id: 2,
    question: 'How do you create a list in Python?',
    code: '',
    options: ['list = []', 'list = list()', 'list = {}', 'Both A and B'],
    correctAnswer: 3,
  },
  {
    id: 3,
    question: 'What is the output of this code?',
    code: "print(3 * 'abc')",
    options: ['abcabcabc', '3abc', 'Error', 'abc abc abc'],
    correctAnswer: 0,
  },
  {
    id: 4,
    question: 'How do you create a tuple with one item?',
    code: '',
    options: ['t = (1)', 't = 1,', 't = (1,)', 'Both B and C'],
    correctAnswer: 3,
  },
  {
    id: 5,
    question: 'What is the correct way to create a dictionary?',
    code: '',
    options: ["d = {'key': 'value'}", "d = dict(key='value')", 'd = {key: value}', 'Both A and B'],
    correctAnswer: 3,
  },
  {
    id: 6,
    question: 'What does this list comprehension do?',
    code: '[x**2 for x in range(5)]',
    options: [
      'Creates a list of squares from 0 to 4',
      'Creates a dictionary of squares',
      'Raises an error',
      'Creates a generator',
    ],
    correctAnswer: 0,
  },
  {
    id: 7,
    question: 'What is the output of this code?',
    code: 'print(5 == 5.0)',
    options: ['True', 'False', 'Error', 'None'],
    correctAnswer: 0,
  },
  {
    id: 8,
    question: 'How do you open a file for reading?',
    code: '',
    options: ["open('file.txt', 'r')", "open('file.txt', 'read')", "open('file.txt', 'w')", "open('file.txt')"],
    correctAnswer: 0,
  },
  {
    id: 9,
    question: 'What is the purpose of __init__ method?',
    code: 'class MyClass:\n    def __init__(self):\n        pass',
    options: [
      'To initialize class attributes',
      'To terminate the class',
      'To make the class abstract',
      'To create a singleton',
    ],
    correctAnswer: 0,
  },
  {
    id: 10,
    question: 'What does this code do?',
    code: 'x = lambda a: a + 10',
    options: [
      'Creates a function that adds 10 to its argument',
      'Creates a list',
      'Raises an error',
      'Creates a class',
    ],
    correctAnswer: 0,
  },
  {
    id: 11,
    question: 'What is the output of this code?',
    code: "print('Hello'[::-1])",
    options: ['Hello', 'olleH', 'Error', 'H'],
    correctAnswer: 1,
  },
  {
    id: 12,
    question: 'What is the correct way to inherit from a class?',
    code: 'class Parent:\n    pass',
    options: ['class Child(Parent):', 'class Child extends Parent:', 'class Child <- Parent:', 'class Child: Parent'],
    correctAnswer: 0,
  },
  {
    id: 13,
    question: "What does the 'with' statement do?",
    code: "with open('file.txt') as f:",
    options: [
      'Automatically closes the file',
      'Creates a new thread',
      'Handles exceptions automatically',
      'Both A and C',
    ],
    correctAnswer: 3,
  },
  {
    id: 14,
    question: 'What is the output of this code?',
    code: 'print([1, 2, 3][1:])',
    options: ['[1, 2]', '[2, 3]', '[1, 2, 3]', 'Error'],
    correctAnswer: 1,
  },
  {
    id: 15,
    question: "What is the difference between '==' and 'is'?",
    code: '',
    options: [
      "'==' compares values, 'is' compares identities",
      "'is' compares values, '==' compares identities",
      'They are identical',
      'They both compare memory addresses',
    ],
    correctAnswer: 0,
  },
  {
    id: 16,
    question: 'How do you handle exceptions in Python?',
    code: '',
    options: ['try-except', 'try-catch', 'error-handle', 'exception'],
    correctAnswer: 0,
  },
  {
    id: 17,
    question: 'What is a decorator in Python?',
    code: '@decorator\ndef func(): pass',
    options: [
      'A function that modifies another function',
      'A special comment',
      'A variable declaration',
      'A class method',
    ],
    correctAnswer: 0,
  },
  {
    id: 18,
    question: 'What is the output of this code?',
    code: 'print(list(map(lambda x: x*2, [1, 2, 3])))',
    options: ['[2, 4, 6]', '[1, 2, 3]', '[1, 4, 9]', 'Error'],
    correctAnswer: 0,
  },
  {
    id: 19,
    question: "What is the purpose of 'self' in Python?",
    code: 'class MyClass:\n    def method(self): pass',
    options: [
      'Refers to the class instance',
      'Is required for static methods',
      'Is optional in instance methods',
      'Refers to the parent class',
    ],
    correctAnswer: 0,
  },
  {
    id: 20,
    question: 'What is the difference between a list and a tuple?',
    code: '',
    options: [
      'Lists are mutable, tuples are immutable',
      'Tuples are mutable, lists are immutable',
      'No difference',
      'Lists can only store numbers',
    ],
    correctAnswer: 0,
  },
  {
    id: 21,
    question: 'What is the output of this code?',
    code: 'print(True + True)',
    options: ['2', 'True', 'Error', '1'],
    correctAnswer: 0,
  },
  {
    id: 22,
    question: "What does the 'yield' keyword do?",
    code: 'def gen():\n    yield 1',
    options: [
      'Creates a generator function',
      'Returns a value from a function',
      'Pauses function execution',
      'All of the above',
    ],
    correctAnswer: 3,
  },
  {
    id: 23,
    question: "What is the purpose of 'if __name__ == '__main__':'?",
    code: "if __name__ == '__main__':\n    main()",
    options: [
      'Ensures code runs only when executed directly',
      'Is required for all Python scripts',
      'Prevents imports',
      'Is just a comment',
    ],
    correctAnswer: 0,
  },
  {
    id: 24,
    question: 'What is the output of this code?',
    code: 'print({1, 2, 2, 3})',
    options: ['{1, 2, 2, 3}', '{1, 2, 3}', 'Error', '[1, 2, 3]'],
    correctAnswer: 1,
  },
  {
    id: 25,
    question: "What is the difference between 'deepcopy' and 'copy'?",
    code: '',
    options: [
      "deepcopy copies nested objects, copy doesn't",
      "copy copies nested objects, deepcopy doesn't",
      'No difference',
      'deepcopy is faster',
    ],
    correctAnswer: 0,
  },
  {
    id: 26,
    question: 'What is the output of this code?',
    code: 'print(round(3.141592, 2))',
    options: ['3.14', '3.141', '3.142', '3.141592'],
    correctAnswer: 0,
  },
  {
    id: 27,
    question: "What does the 'pass' statement do?",
    code: 'def func():\n    pass',
    options: ['Is a null operation', 'Terminates the function', 'Skips the next line', 'Creates a placeholder'],
    correctAnswer: 0,
  },
  {
    id: 28,
    question: 'What is the output of this code?',
    code: "print('Python'.lower())",
    options: ['PYTHON', 'python', 'Python', 'Error'],
    correctAnswer: 1,
  },
  {
    id: 29,
    question: "What is the purpose of 'super()'?",
    code: 'class Child(Parent):\n    def __init__(self):\n        super().__init__()',
    options: [
      "Calls the parent class's methods",
      'Creates a superclass',
      'Is required for all inheritance',
      'Terminates the class',
    ],
    correctAnswer: 0,
  },
  {
    id: 30,
    question: 'What is the output of this code?',
    code: 'print(any([False, True, False]))',
    options: ['True', 'False', 'Error', 'None'],
    correctAnswer: 0,
  },
];
