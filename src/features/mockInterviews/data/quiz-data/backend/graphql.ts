import { Question } from '@/features/mockInterviews/types/questions';

export const graphqlQuestions: Question[] = [
  {
    id: 1,
    question: 'What is GraphQL?',
    code: '',
    options: [
      'A database technology',
      'A query language for APIs and a runtime for executing those queries',
      'A frontend framework',
      'A state management library',
    ],
    correctAnswer: 1,
  },
  {
    id: 2,
    question: 'What is the main advantage of GraphQL over REST?',
    code: '',
    options: [
      'GraphQL is always faster than REST',
      'Clients can request exactly the data they need',
      `GraphQL doesn't require HTTP`,
      `GraphQL has built-in caching`,
    ],
    correctAnswer: 1,
  },
  {
    id: 3,
    question: 'What are the three main operations in GraphQL?',
    code: '',
    options: ['GET, POST, PUT', 'Query, Mutation, Subscription', 'Read, Write, Delete', 'Request, Response, Error'],
    correctAnswer: 1,
  },
  {
    id: 4,
    question: 'What is a GraphQL schema?',
    code: '',
    options: [
      'A database schema',
      'A collection of type definitions that describe your API',
      'A configuration file for GraphQL servers',
      'A template for frontend components',
    ],
    correctAnswer: 1,
  },
  {
    id: 5,
    question: 'What is the root type that serves as the entry point for queries?',
    code: '',
    options: ['Query', 'Root', 'Entry', 'Main'],
    correctAnswer: 0,
  },
  {
    id: 6,
    question: 'What is the purpose of a GraphQL mutation?',
    code: '',
    options: ['To fetch data', 'To modify server-side data', 'To cache responses', 'To validate queries'],
    correctAnswer: 1,
  },
  {
    id: 7,
    question: 'What is a resolver in GraphQL?',
    code: '',
    options: [
      'A function that resolves conflicts between queries',
      'A function that connects schema fields to data sources',
      'A tool to resolve npm dependencies',
      'A component that renders GraphQL responses',
    ],
    correctAnswer: 1,
  },
  {
    id: 8,
    question: 'What is GraphQL introspection?',
    code: '',
    options: [
      'A way to examine the GraphQL schema',
      'A debugging technique',
      'A type of query optimization',
      'A security feature',
    ],
    correctAnswer: 0,
  },
  {
    id: 9,
    question: 'What is the purpose of fragments in GraphQL?',
    code: '',
    options: [
      'To break queries into smaller pieces',
      'To reuse sets of fields',
      'To handle errors',
      'To cache responses',
    ],
    correctAnswer: 1,
  },
  {
    id: 10,
    question: 'What is the difference between Apollo Client and Relay?',
    code: '',
    options: [
      'Apollo is for REST, Relay is for GraphQL',
      'Relay has more opinionated requirements but better performance optimizations',
      `Apollo doesn't support React`,
      `Relay doesn't support mutations`,
    ],
    correctAnswer: 1,
  },
  {
    id: 11,
    question: 'What is GraphQL subscription used for?',
    code: '',
    options: [
      'To subscribe to newsletter services',
      'To receive real-time updates from the server',
      'To manage user subscriptions',
      'To cache queries',
    ],
    correctAnswer: 1,
  },
  {
    id: 12,
    question: 'What is the purpose of variables in GraphQL queries?',
    code: '',
    options: ['To store query results', 'To make queries dynamic', 'To improve performance', 'To validate queries'],
    correctAnswer: 1,
  },
  {
    id: 13,
    question: 'What is the __typename field in GraphQL?',
    code: '',
    options: [
      'A special field that returns the type name of the object',
      'A required field for all queries',
      'A field used only in mutations',
      'A deprecated field',
    ],
    correctAnswer: 0,
  },
  {
    id: 14,
    question: 'What is query batching in GraphQL?',
    code: '',
    options: [
      'Combining multiple queries into a single request',
      'Caching similar queries',
      'A way to paginate queries',
      'A security feature',
    ],
    correctAnswer: 0,
  },
  {
    id: 15,
    question: 'What is persisted queries in GraphQL?',
    code: '',
    options: [
      'Queries that are stored in localStorage',
      'Pre-registered queries identified by unique IDs',
      'Queries that never expire',
      'Queries that work offline',
    ],
    correctAnswer: 1,
  },
  {
    id: 16,
    question: 'What is the purpose of directives in GraphQL?',
    code: '',
    options: [
      'To modify query execution and result formatting',
      'To direct traffic to different servers',
      'To manage database connections',
      'To style GraphQL responses',
    ],
    correctAnswer: 0,
  },
  {
    id: 17,
    question: 'What is the @skip directive used for?',
    code: '',
    options: [
      'To skip validation',
      'To conditionally skip fields based on a boolean',
      'To skip middleware',
      'To skip caching',
    ],
    correctAnswer: 1,
  },
  {
    id: 18,
    question: 'What is the @include directive used for?',
    code: '',
    options: [
      'To include external files',
      'To conditionally include fields based on a boolean',
      'To include middleware',
      'To include caching',
    ],
    correctAnswer: 1,
  },
  {
    id: 19,
    question: 'What is the N+1 problem in GraphQL?',
    code: '',
    options: [
      'A performance issue caused by making too many database queries',
      'A type of syntax error',
      'A caching problem',
      'A security vulnerability',
    ],
    correctAnswer: 0,
  },
  {
    id: 20,
    question: 'How can you solve the N+1 problem in GraphQL?',
    code: '',
    options: [
      'By using batching or dataloader',
      'By avoiding nested queries',
      'By using more mutations',
      'By increasing cache size',
    ],
    correctAnswer: 0,
  },
  {
    id: 21,
    question: 'What is DataLoader used for in GraphQL?',
    code: '',
    options: [
      'To load data from multiple sources',
      'To batch and cache database requests',
      'To validate queries',
      'To style responses',
    ],
    correctAnswer: 1,
  },
  {
    id: 22,
    question: 'What is the difference between GraphQL and gRPC?',
    code: '',
    options: [
      'GraphQL is for queries, gRPC is for procedure calls',
      'gRPC uses HTTP/2 while GraphQL can use HTTP/1.1',
      'GraphQL is language-agnostic, gRPC requires protocol buffers',
      'All of the above',
    ],
    correctAnswer: 3,
  },
  {
    id: 23,
    question: 'What is schema stitching in GraphQL?',
    code: '',
    options: [
      'Combining multiple GraphQL schemas into one',
      'A way to validate schemas',
      'A caching technique',
      'A security feature',
    ],
    correctAnswer: 0,
  },
  {
    id: 24,
    question: 'What is federation in GraphQL?',
    code: '',
    options: [
      'A way to combine multiple GraphQL services',
      'A security protocol',
      'A caching strategy',
      'A database technology',
    ],
    correctAnswer: 0,
  },
  {
    id: 25,
    question: 'What is the purpose of interfaces in GraphQL?',
    code: '',
    options: [
      'To define abstract types that other types can implement',
      'To connect to external APIs',
      'To manage database connections',
      'To style responses',
    ],
    correctAnswer: 0,
  },
  {
    id: 26,
    question: 'What are unions in GraphQL?',
    code: '',
    options: [
      'A way to combine multiple queries',
      'Types that can represent multiple different object types',
      'A way to merge schemas',
      'A caching mechanism',
    ],
    correctAnswer: 1,
  },
  {
    id: 27,
    question: 'What is the purpose of input types in GraphQL?',
    code: '',
    options: [
      'To handle user input in forms',
      'To group complex input arguments',
      'To validate mutations',
      'To cache queries',
    ],
    correctAnswer: 1,
  },
  {
    id: 28,
    question: 'How does GraphQL handle error responses?',
    code: '',
    options: [
      'Through HTTP status codes only',
      'Through the errors field in the response',
      'By throwing exceptions',
      'By returning null values',
    ],
    correctAnswer: 1,
  },
  {
    id: 29,
    question: 'What is the purpose of aliases in GraphQL?',
    code: '',
    options: [
      'To rename fields in the response',
      'To create alternate schemas',
      'To handle authentication',
      'To improve performance',
    ],
    correctAnswer: 0,
  },
  {
    id: 30,
    question: 'What is the difference between Apollo Server and Express GraphQL?',
    code: '',
    options: [
      'Apollo Server is more feature-complete with built-in subscriptions and caching',
      'Express GraphQL is faster',
      'Apollo Server only works with React',
      `Express GraphQL doesn't support queries`,
    ],
    correctAnswer: 0,
  },
];
