import { Question } from '@/features/mockInterviews/types/questions';

export const oauthQuestions: Question[] = [
  // OAuth Questions (30)
  {
    id: 1,
    question: 'What is OAuth?',
    code: '',
    options: [
      'A programming language',
      'An open-standard authorization protocol',
      'A database management system',
      'A cloud storage service',
    ],
    correctAnswer: 1,
  },
  {
    id: 2,
    question: 'Which OAuth flow is most suitable for single-page applications?',
    code: '',
    options: [
      'Authorization Code Flow',
      'Implicit Flow',
      'Client Credentials Flow',
      'Resource Owner Password Credentials Flow',
    ],
    correctAnswer: 1,
  },
  {
    id: 3,
    question: 'What is the purpose of the "state" parameter in OAuth?',
    code: '',
    options: [
      'To maintain session state',
      'To prevent CSRF attacks',
      'To store user credentials',
      'To identify the resource server',
    ],
    correctAnswer: 1,
  },
  {
    id: 4,
    question: 'What is the difference between OAuth 1.0 and OAuth 2.0?',
    code: '',
    options: [
      'OAuth 1.0 is more complex and requires cryptographic operations',
      'OAuth 2.0 is more secure for all use cases',
      'OAuth 1.0 is faster than OAuth 2.0',
      'There is no significant difference',
    ],
    correctAnswer: 0,
  },
  {
    id: 5,
    question: 'What is an OAuth access token?',
    code: '',
    options: [
      'A token that identifies the user',
      'A token used to access protected resources',
      'A token used only during authentication',
      'A permanent credential',
    ],
    correctAnswer: 1,
  },
  {
    id: 6,
    question: 'What is the purpose of the refresh token in OAuth 2.0?',
    code: '',
    options: [
      'To authenticate the user',
      'To obtain new access tokens without user interaction',
      'To refresh the client secret',
      'To extend the lifetime of the access token',
    ],
    correctAnswer: 1,
  },
  {
    id: 7,
    question: 'Which OAuth flow should be used for server-to-server communication?',
    code: '',
    options: ['Authorization Code Flow', 'Implicit Flow', 'Client Credentials Flow', 'Device Code Flow'],
    correctAnswer: 2,
  },
  {
    id: 8,
    question: 'What is OpenID Connect in relation to OAuth 2.0?',
    code: '',
    options: [
      'A competing standard',
      'An extension for authentication',
      'A replacement for OAuth 2.0',
      'A protocol for mobile apps only',
    ],
    correctAnswer: 1,
  },
  {
    id: 9,
    question: 'What is the main security risk of the Implicit Flow?',
    code: '',
    options: [
      'Access tokens are exposed in the URL',
      'It requires client secrets',
      `It's too slow`,
      `It doesn't support refresh tokens`,
    ],
    correctAnswer: 0,
  },
  {
    id: 10,
    question: 'What is PKCE (Proof Key for Code Exchange) used for?',
    code: '',
    options: [
      'To encrypt OAuth tokens',
      'To secure the Authorization Code Flow for public clients',
      'To replace client secrets',
      'To shorten access tokens',
    ],
    correctAnswer: 1,
  },
  {
    id: 11,
    question: 'Which of these is NOT an OAuth grant type?',
    code: '',
    options: ['Authorization Code', 'Client Credentials', 'Resource Owner Password', 'JSON Web Token'],
    correctAnswer: 3,
  },
  {
    id: 12,
    question: 'What is the purpose of the OAuth scope parameter?',
    code: '',
    options: [
      'To limit the access granted to the token',
      'To identify the client application',
      'To specify the token expiration time',
      'To determine the token format',
    ],
    correctAnswer: 0,
  },
  {
    id: 13,
    question: 'What is the main difference between authentication and authorization in OAuth context?',
    code: '',
    options: [
      'Authentication verifies identity, authorization grants permissions',
      'They are the same thing',
      'Authorization happens first, then authentication',
      'Authentication uses tokens, authorization uses cookies',
    ],
    correctAnswer: 0,
  },
  {
    id: 14,
    question: 'Which header is typically used to send OAuth access tokens?',
    code: '',
    options: ['X-OAuth-Token', 'Authorization: Bearer', 'X-Access-Token', 'Token'],
    correctAnswer: 1,
  },
  {
    id: 15,
    question: 'What is the main security concern with storing OAuth tokens in client-side storage?',
    code: '',
    options: [
      'They can be stolen via XSS attacks',
      'They expire too quickly',
      'They are too large',
      'They require encryption',
    ],
    correctAnswer: 0,
  },
  {
    id: 16,
    question: 'What is token binding in OAuth 2.0?',
    code: '',
    options: [
      'A method to encrypt tokens',
      'Linking tokens to specific client characteristics',
      'Combining access and refresh tokens',
      'A way to extend token lifetime',
    ],
    correctAnswer: 1,
  },
  {
    id: 17,
    question: 'Which OAuth flow is recommended for mobile applications?',
    code: '',
    options: [
      'Authorization Code Flow with PKCE',
      'Implicit Flow',
      'Resource Owner Password Credentials',
      'Client Credentials Flow',
    ],
    correctAnswer: 0,
  },
  {
    id: 18,
    question: 'What is the purpose of the "redirect_uri" in OAuth?',
    code: '',
    options: [
      'To specify where the user should be sent after logout',
      'To determine where the authorization code or tokens are delivered',
      'To identify the resource server',
      'To configure CORS settings',
    ],
    correctAnswer: 1,
  },
  {
    id: 19,
    question: 'What is a JWT in the context of OAuth?',
    code: '',
    options: [
      'A type of access token',
      'A format for representing claims securely',
      'A replacement for OAuth',
      'A database query language',
    ],
    correctAnswer: 1,
  },
  {
    id: 20,
    question: 'What is the main advantage of using short-lived access tokens?',
    code: '',
    options: [
      'They reduce server load',
      'They limit the damage if a token is compromised',
      'They are easier to implement',
      'They require less storage',
    ],
    correctAnswer: 1,
  },
  {
    id: 21,
    question: 'Which of these is NOT a valid OAuth token endpoint response?',
    code: '',
    options: ['access_token', 'refresh_token', 'id_token', 'password_token'],
    correctAnswer: 3,
  },
  {
    id: 22,
    question: 'What is the purpose of the "client_id" in OAuth?',
    code: '',
    options: [
      'To authenticate the client application',
      'To encrypt the tokens',
      'To identify the user',
      'To specify the token expiration',
    ],
    correctAnswer: 0,
  },
  {
    id: 23,
    question: 'What security measure helps prevent replay attacks in OAuth?',
    code: '',
    options: ['Using HTTPS', 'Short token expiration', 'Nonce values', 'All of the above'],
    correctAnswer: 3,
  },
  {
    id: 24,
    question: 'What is the OAuth token introspection endpoint used for?',
    code: '',
    options: [
      'To create new tokens',
      'To validate tokens and get their metadata',
      'To exchange authorization codes',
      'To refresh expired tokens',
    ],
    correctAnswer: 1,
  },
  {
    id: 25,
    question: 'Which OAuth flow should never be used for modern web applications?',
    code: '',
    options: [
      'Authorization Code Flow',
      'Implicit Flow',
      'Client Credentials Flow',
      'Resource Owner Password Credentials Flow',
    ],
    correctAnswer: 3,
  },
  {
    id: 26,
    question: 'What is the purpose of the OAuth revocation endpoint?',
    code: '',
    options: [
      'To invalidate tokens before they expire',
      'To delete user accounts',
      'To reset client secrets',
      'To rotate encryption keys',
    ],
    correctAnswer: 0,
  },
  {
    id: 27,
    question: 'What is the main risk of using the Resource Owner Password Credentials flow?',
    code: '',
    options: [
      'The client application gets access to user credentials',
      `It doesn't support refresh tokens`,
      'It requires complex cryptographic operations',
      'It only works with JSON payloads',
    ],
    correctAnswer: 0,
  },
  {
    id: 28,
    question: 'What is the recommended way to secure OAuth tokens in transit?',
    code: '',
    options: [
      'Using HTTP with token encryption',
      'Using HTTPS exclusively',
      'Using IP whitelisting',
      'Using custom headers',
    ],
    correctAnswer: 1,
  },
  {
    id: 29,
    question: 'What is the purpose of the "aud" claim in an OAuth JWT?',
    code: '',
    options: [
      'To identify the intended recipient of the token',
      'To specify the token expiration',
      'To indicate the token type',
      'To store user attributes',
    ],
    correctAnswer: 0,
  },
  {
    id: 30,
    question: 'Which standard helps mitigate token leakage in OAuth implementations?',
    code: '',
    options: ['OpenID Connect', 'PKCE', 'Token Binding', 'All of the above'],
    correctAnswer: 3,
  },
];
