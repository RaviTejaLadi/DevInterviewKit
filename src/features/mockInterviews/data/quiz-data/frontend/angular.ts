import { Question } from '@/features/mockInterviews/types/questions';

export const angularQuestions: Question[] = [
  {
    id: 1,
    question: 'What is Angular?',
    code: '',
    options: [
      'A JavaScript library for building user interfaces',
      'A framework for building client-side applications',
      'A server-side rendering engine',
      'A database management system',
    ],
    correctAnswer: 1,
  },
  {
    id: 2,
    question: 'What is a component in Angular?',
    code: '',
    options: [
      'A service that handles data',
      'A directive that modifies DOM elements',
      'A building block of the UI with template and behavior',
      'A module that bundles other modules',
    ],
    correctAnswer: 2,
  },
  {
    id: 3,
    question: 'What is data binding in Angular?',
    code: '',
    options: [
      'A way to connect application data with the DOM',
      'A method to bind CSS classes',
      'A technique to connect two databases',
      'A way to bind multiple components together',
    ],
    correctAnswer: 0,
  },
  {
    id: 4,
    question: 'What is dependency injection in Angular?',
    code: '',
    options: [
      'A design pattern where a class requests dependencies from external sources',
      'A way to inject CSS into components',
      'A method to inject HTML templates',
      'A pattern for database connectivity',
    ],
    correctAnswer: 0,
  },
  {
    id: 5,
    question: 'What is the purpose of NgModule?',
    code: '',
    options: [
      'To define a routing configuration',
      'To declare components, directives, pipes and services',
      'To create HTTP requests',
      'To manage form validations',
    ],
    correctAnswer: 1,
  },
  {
    id: 6,
    question: 'What is the difference between ngOnInit and constructor?',
    code: '',
    options: [
      'constructor is for dependency injection, ngOnInit for initialization logic',
      'They are identical and can be used interchangeably',
      'ngOnInit is called before constructor',
      'constructor is used only for services',
    ],
    correctAnswer: 0,
  },
  {
    id: 7,
    question: 'What are Angular pipes?',
    code: '',
    options: [
      'Components that transform input data',
      'Services that handle HTTP requests',
      'Features that transform displayed values in templates',
      'Directives that modify DOM structure',
    ],
    correctAnswer: 2,
  },
  {
    id: 8,
    question: 'What is the purpose of Angular directives?',
    code: '',
    options: [
      'To create new HTML elements',
      'To add behavior to existing DOM elements',
      'To handle HTTP requests',
      'To manage application state',
    ],
    correctAnswer: 1,
  },
  {
    id: 9,
    question: 'What is the difference between Angular and AngularJS?',
    code: '',
    options: [
      'They are exactly the same',
      'AngularJS uses TypeScript while Angular uses JavaScript',
      'Angular is a complete rewrite with different architecture',
      'AngularJS is newer than Angular',
    ],
    correctAnswer: 2,
  },
  {
    id: 10,
    question: 'What is an Angular service?',
    code: '',
    options: [
      'A component without a template',
      'A singleton object that provides specific functionality',
      'A directive for services',
      'A module that contains only providers',
    ],
    correctAnswer: 1,
  },
  {
    id: 11,
    question: 'What is the purpose of the async pipe?',
    code: '',
    options: [
      'To handle synchronous operations',
      'To subscribe to Observables/Promises in templates',
      'To create asynchronous functions',
      'To pipe multiple observables together',
    ],
    correctAnswer: 1,
  },
  {
    id: 12,
    question: 'What is Angular CLI?',
    code: '',
    options: [
      'A command line compiler for Angular',
      'A command line interface for Angular development',
      'A component library for Angular',
      'A cloud integration service',
    ],
    correctAnswer: 1,
  },
  {
    id: 13,
    question: 'What is the purpose of ViewChild decorator?',
    code: '',
    options: [
      'To get reference to a child component or DOM element',
      'To create a child view',
      'To inject a child service',
      'To access parent component properties',
    ],
    correctAnswer: 0,
  },
  {
    id: 14,
    question: 'What is Angular Router?',
    code: '',
    options: [
      'A service for HTTP routing',
      'A mechanism for navigation between views',
      'A database routing system',
      'A component for routing pipes',
    ],
    correctAnswer: 1,
  },
  {
    id: 15,
    question: 'What is AOT compilation in Angular?',
    code: '',
    options: [
      'Compilation at build time for better performance',
      'Compilation at runtime for dynamic templates',
      'A testing compilation process',
      'An optimization for CSS compilation',
    ],
    correctAnswer: 0,
  },
  {
    id: 16,
    question: 'What is lazy loading in Angular?',
    code: '',
    options: [
      'Loading modules only when they are needed',
      'Loading all modules at application startup',
      'A technique to load CSS slowly',
      'A method to defer component rendering',
    ],
    correctAnswer: 0,
  },
  {
    id: 17,
    question: 'What is the purpose of trackBy in ngFor?',
    code: '',
    options: [
      'To track the index of each item',
      'To provide a unique identifier for each item to optimize rendering',
      'To sort the items in the list',
      'To filter items in the list',
    ],
    correctAnswer: 1,
  },
  {
    id: 18,
    question: 'What are Angular guards?',
    code: '',
    options: [
      'Components that protect other components',
      'Interfaces to protect routes with conditions',
      'Services that guard against HTTP errors',
      'Directives that protect DOM elements',
    ],
    correctAnswer: 1,
  },
  {
    id: 19,
    question: 'What is the difference between reactive and template-driven forms?',
    code: '',
    options: [
      'Reactive forms are model-driven while template-driven are DOM-driven',
      'Template-driven forms are more scalable',
      'Reactive forms are simpler to implement',
      'There is no significant difference',
    ],
    correctAnswer: 0,
  },
  {
    id: 20,
    question: 'What is an Angular resolver?',
    code: '',
    options: [
      'A service that resolves component dependencies',
      'A guard that resolves data before route activation',
      'A pipe that resolves observable values',
      'A directive that resolves template conflicts',
    ],
    correctAnswer: 1,
  },
  {
    id: 21,
    question: 'What is the purpose of HttpClient in Angular?',
    code: '',
    options: [
      'To handle client-side storage',
      'To make HTTP requests to servers',
      'To create HTTP servers',
      'To validate HTTP responses',
    ],
    correctAnswer: 1,
  },
  {
    id: 22,
    question: 'What is change detection in Angular?',
    code: '',
    options: [
      'A process that checks for changes in component state and updates the DOM',
      'A method to detect changes in CSS',
      'A service to detect route changes',
      'A directive to detect DOM mutations',
    ],
    correctAnswer: 0,
  },
  {
    id: 23,
    question: 'What is the purpose of ng-content?',
    code: '',
    options: [
      'To include external HTML content',
      'To project content into a component',
      'To bind content to a model',
      'To validate form content',
    ],
    correctAnswer: 1,
  },
  {
    id: 24,
    question: 'What is an Angular interceptor?',
    code: '',
    options: [
      'A component that intercepts user events',
      'A service that intercepts HTTP requests/responses',
      'A directive that intercepts DOM events',
      'A pipe that intercepts data transformations',
    ],
    correctAnswer: 1,
  },
  {
    id: 25,
    question: 'What is the purpose of ng-template?',
    code: '',
    options: [
      'To define a template that can be reused or instantiated later',
      'To create a new component',
      'To replace the main application template',
      'To define inline styles',
    ],
    correctAnswer: 0,
  },
  {
    id: 26,
    question: 'What is Ivy in Angular?',
    code: '',
    options: [
      'A new HTTP client',
      'A new rendering engine',
      'A new state management library',
      'A new testing framework',
    ],
    correctAnswer: 1,
  },
  {
    id: 27,
    question: 'What is the purpose of ng-container?',
    code: '',
    options: [
      'To create a container component',
      'To group elements without adding to the DOM',
      'To store application state',
      'To contain services',
    ],
    correctAnswer: 1,
  },
  {
    id: 28,
    question: 'What is Angular Universal?',
    code: '',
    options: [
      'A component library',
      'A server-side rendering solution',
      'A state management pattern',
      'A universal styling system',
    ],
    correctAnswer: 1,
  },
  {
    id: 29,
    question: 'What is the purpose of RxJS in Angular?',
    code: '',
    options: [
      'To handle reactive programming with Observables',
      'To provide routing capabilities',
      'To manage component styles',
      'To handle template parsing',
    ],
    correctAnswer: 0,
  },
  {
    id: 30,
    question: 'What is the difference between Subject and BehaviorSubject?',
    code: '',
    options: [
      'BehaviorSubject has no initial value',
      'Subject emits the last value to new subscribers',
      'BehaviorSubject requires an initial value and emits current value to new subscribers',
      'They are identical and can be used interchangeably',
    ],
    correctAnswer: 2,
  },
];
