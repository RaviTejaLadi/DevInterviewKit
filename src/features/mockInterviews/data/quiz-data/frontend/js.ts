import { Question } from '../../types/questions';

export const jsQuestions: Question[] = [
  {
    id: 1,
    question: 'What is JavaScript?',
    code: '',
    options: ['A markup language', 'A scripting language for web pages', 'A styling language', 'A database language'],
    correctAnswer: 1,
  },
  {
    id: 2,
    question: 'What is the difference between `let`, `const`, and `var`?',
    code: '',
    options: [
      '`let` is block-scoped, `const` is block-scoped and immutable, `var` is function-scoped',
      '`var` is block-scoped, `let` is function-scoped, `const` is immutable',
      'All three are the same',
      '`const` is mutable, `let` is immutable',
    ],
    correctAnswer: 0,
  },
  {
    id: 3,
    question: 'What is hoisting in JavaScript?',
    code: '',
    options: [
      'Moving variables and functions to the bottom of their scope',
      'Moving variables and functions to the top of their scope before execution',
      'A way to optimize performance',
      'A method to hide variables',
    ],
    correctAnswer: 1,
  },
  {
    id: 4,
    question: 'What is closure in JavaScript?',
    code: '',
    options: [
      'A function bundled with its lexical environment',
      'A way to close a program',
      'A built-in JavaScript method',
      'A type of loop',
    ],
    correctAnswer: 0,
  },
  {
    id: 5,
    question: 'What is the output of `typeof null`?',
    code: 'console.log(typeof null);',
    options: ["`'null'`", "`'object'`", "`'undefined'`", "`'string'`"],
    correctAnswer: 1,
  },
  {
    id: 6,
    question: 'What is the difference between `==` and `===`?',
    code: '',
    options: [
      '`==` checks value only, `===` checks value and type',
      '`===` checks value only, `==` checks value and type',
      'They are the same',
      '`==` is for strings, `===` is for numbers',
    ],
    correctAnswer: 0,
  },
  {
    id: 7,
    question: 'What is an IIFE (Immediately Invoked Function Expression)?',
    code: '',
    options: [
      'A function that runs immediately after declaration',
      'A function that runs only once',
      'A function that cannot be called again',
      'A function that waits for an event',
    ],
    correctAnswer: 0,
  },
  {
    id: 8,
    question: 'What is the purpose of `this` keyword in JavaScript?',
    code: '',
    options: [
      'Refers to the current function',
      'Refers to the global object',
      'Refers to the object it belongs to',
      'Refers to the parent function',
    ],
    correctAnswer: 2,
  },
  {
    id: 9,
    question: 'What is the output of `[] + []`?',
    code: 'console.log([] + []);',
    options: ['`[]`', "`''` (empty string)", '`0`', '`undefined`'],
    correctAnswer: 1,
  },
  {
    id: 10,
    question: 'What is event delegation in JavaScript?',
    code: '',
    options: [
      'Attaching events to parent elements instead of individual child elements',
      'A way to delegate tasks to workers',
      'A method to stop event propagation',
      'A way to create custom events',
    ],
    correctAnswer: 0,
  },
  {
    id: 11,
    question: 'What is the difference between `null` and `undefined`?',
    code: '',
    options: [
      '`null` is assigned, `undefined` means no value',
      '`undefined` is assigned, `null` means no value',
      'They are the same',
      '`null` is a number, `undefined` is a string',
    ],
    correctAnswer: 0,
  },
  {
    id: 12,
    question: 'What is a promise in JavaScript?',
    code: '',
    options: [
      'A commitment to write clean code',
      'An object representing the eventual completion or failure of an async operation',
      'A type of loop',
      'A way to declare variables',
    ],
    correctAnswer: 1,
  },
  {
    id: 13,
    question: "What is the output of `'5' + 3`?",
    code: "console.log('5' + 3);",
    options: ['`8`', "`'53'`", '`53` (number)', '`Error`'],
    correctAnswer: 1,
  },
  {
    id: 14,
    question: 'What is the difference between `call`, `apply`, and `bind`?',
    code: '',
    options: [
      '`call` and `apply` invoke immediately, `bind` returns a new function',
      '`bind` invokes immediately, `call` and `apply` return new functions',
      'They are the same',
      '`apply` is for arrays, `bind` is for objects',
    ],
    correctAnswer: 0,
  },
  {
    id: 15,
    question: 'What is the purpose of `async/await`?',
    code: '',
    options: [
      'To make synchronous code look asynchronous',
      'To handle asynchronous operations in a synchronous-like manner',
      'To replace promises',
      'To speed up execution',
    ],
    correctAnswer: 1,
  },
  {
    id: 16,
    question: 'What is the output of `typeof NaN`?',
    code: 'console.log(typeof NaN);',
    options: ["`'NaN'`", "`'number'`", "`'undefined'`", "`'string'`"],
    correctAnswer: 1,
  },
  {
    id: 17,
    question: 'What is the difference between `setTimeout` and `setInterval`?',
    code: '',
    options: [
      '`setTimeout` runs once, `setInterval` repeats',
      '`setInterval` runs once, `setTimeout` repeats',
      'They are the same',
      '`setTimeout` is for promises, `setInterval` is for callbacks',
    ],
    correctAnswer: 0,
  },
  {
    id: 18,
    question: 'What is the purpose of `localStorage` and `sessionStorage`?',
    code: '',
    options: [
      'To store data temporarily in the browser',
      'To replace cookies',
      'To manage server-side sessions',
      'To handle API requests',
    ],
    correctAnswer: 0,
  },
  {
    id: 19,
    question: 'What is the output of `0.1 + 0.2 === 0.3`?',
    code: 'console.log(0.1 + 0.2 === 0.3);',
    options: ['`true`', '`false`', '`NaN`', '`Error`'],
    correctAnswer: 1,
  },
  {
    id: 20,
    question: 'What is the difference between `map` and `forEach`?',
    code: '',
    options: [
      '`map` returns a new array, `forEach` does not',
      '`forEach` returns a new array, `map` does not',
      'They are the same',
      '`map` is for objects, `forEach` is for arrays',
    ],
    correctAnswer: 0,
  },
  {
    id: 21,
    question: 'What is the purpose of `fetch` in JavaScript?',
    code: '',
    options: ['To fetch data from an API', 'To manipulate the DOM', 'To create animations', 'To store data'],
    correctAnswer: 0,
  },
  {
    id: 22,
    question: "What is the output of `'b' + 'a' + + 'a' + 'a'`?",
    code: "console.log('b' + 'a' + + 'a' + 'a');",
    options: ["`'baaa'`", "`'baNaNa'`", "`'baundefineda'`", "`'baa'`"],
    correctAnswer: 1,
  },
  {
    id: 23,
    question: 'What is the difference between `slice` and `splice`?',
    code: '',
    options: [
      '`slice` returns a new array, `splice` modifies the original',
      '`splice` returns a new array, `slice` modifies the original',
      'They are the same',
      '`slice` is for strings, `splice` is for arrays',
    ],
    correctAnswer: 0,
  },
  {
    id: 24,
    question: 'What is a generator function in JavaScript?',
    code: '',
    options: [
      'A function that generates random numbers',
      'A function that can pause and resume execution',
      'A function that runs only once',
      'A function that returns a promise',
    ],
    correctAnswer: 1,
  },
  {
    id: 25,
    question: 'What is the purpose of `Object.freeze()`?',
    code: '',
    options: [
      'To make an object immutable',
      'To delete all properties of an object',
      'To convert an object to JSON',
      'To clone an object',
    ],
    correctAnswer: 0,
  },
  {
    id: 26,
    question: 'What is the difference between `prototype` and `__proto__`?',
    code: '',
    options: [
      '`prototype` is a property of functions, `__proto__` is a property of objects',
      '`__proto__` is a property of functions, `prototype` is a property of objects',
      'They are the same',
      '`prototype` is for ES6, `__proto__` is for ES5',
    ],
    correctAnswer: 0,
  },
  {
    id: 27,
    question: 'What is the output of `!!null`?',
    code: 'console.log(!!null);',
    options: ['`true`', '`false`', '`null`', '`undefined`'],
    correctAnswer: 1,
  },
  {
    id: 28,
    question: 'What is the purpose of `Array.reduce()`?',
    code: '',
    options: [
      'To reduce the size of an array',
      'To execute a reducer function on each element, resulting in a single output',
      'To filter an array',
      'To sort an array',
    ],
    correctAnswer: 1,
  },
  {
    id: 29,
    question: 'What is the difference between `ES5` and `ES6`?',
    code: '',
    options: [
      'ES6 introduced `let`, `const`, arrow functions, classes, and more',
      'ES5 introduced modules, promises, and template literals',
      'They are the same',
      'ES6 is older than ES5',
    ],
    correctAnswer: 0,
  },
  {
    id: 30,
    question: 'What is the output of `typeof function() {}`?',
    code: 'console.log(typeof function() {});',
    options: ["`'function'`", "`'object'`", "`'undefined'`", "`'string'`"],
    correctAnswer: 0,
  },
];
