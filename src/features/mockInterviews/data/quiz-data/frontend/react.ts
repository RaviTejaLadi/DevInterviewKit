import { Question } from '@/features/mockInterviews/types/questions';

export const reactQuestions: Question[] = [
  {
    id: 1,
    question: 'What is React?',
    code: '',
    options: [
      'A JavaScript framework for building server-side applications',
      'A JavaScript library for building user interfaces',
      'A programming language',
      'A database management system',
    ],
    correctAnswer: 1,
  },
  {
    id: 2,
    question: 'What is JSX?',
    code: '',
    options: [
      'A syntax extension for JavaScript',
      'A templating language',
      'A CSS preprocessor',
      'A type of database query',
    ],
    correctAnswer: 0,
  },
  {
    id: 3,
    question: 'What is the virtual DOM?',
    code: '',
    options: [
      'A lightweight copy of the real DOM',
      'A server-side rendering technique',
      'A browser plugin',
      'A state management library',
    ],
    correctAnswer: 0,
  },
  {
    id: 4,
    question: 'What is the purpose of React hooks?',
    code: '',
    options: [
      'To connect to external APIs',
      'To handle CSS styling',
      'To enable state and lifecycle features in functional components',
      'To create class components',
    ],
    correctAnswer: 2,
  },
  {
    id: 5,
    question: 'Which hook is used for side effects in functional components?',
    code: '',
    options: ['useState', 'useEffect', 'useContext', 'useReducer'],
    correctAnswer: 1,
  },
  {
    id: 6,
    question: 'What is the correct way to update state in React?',
    code: 'const [count, setCount] = useState(0);',
    options: ['count = count + 1', 'setCount(count + 1)', 'this.setState({count: count + 1})', 'count++'],
    correctAnswer: 1,
  },
  {
    id: 7,
    question: 'What is prop drilling?',
    code: '',
    options: [
      'The process of passing props through multiple layers of components',
      'A performance optimization technique',
      'A way to style components',
      'A method for handling forms',
    ],
    correctAnswer: 0,
  },
  {
    id: 8,
    question: 'What is the purpose of keys in React lists?',
    code: '',
    options: [
      'To provide unique identifiers for list items',
      'To encrypt component data',
      'To style list items',
      'To sort the list automatically',
    ],
    correctAnswer: 0,
  },
  {
    id: 9,
    question: 'What is React context used for?',
    code: '',
    options: ['For global state management', 'For routing', 'For form validation', 'For API calls'],
    correctAnswer: 0,
  },
  {
    id: 10,
    question: 'What is the difference between controlled and uncontrolled components?',
    code: '',
    options: [
      "Controlled components manage their own state, uncontrolled don't",
      "Uncontrolled components manage their own state, controlled don't",
      'There is no difference',
      'Controlled components are class components, uncontrolled are functional',
    ],
    correctAnswer: 1,
  },
  {
    id: 11,
    question: 'What is React Router used for?',
    code: '',
    options: ['State management', 'Navigation between views in a React application', 'API calls', 'Form handling'],
    correctAnswer: 1,
  },
  {
    id: 12,
    question: 'What is the purpose of useMemo hook?',
    code: '',
    options: [
      'To memorize API responses',
      'To optimize performance by memoizing expensive calculations',
      'To create memo components',
      'To handle memory management',
    ],
    correctAnswer: 1,
  },
  {
    id: 13,
    question: 'What is the difference between useCallback and useMemo?',
    code: '',
    options: [
      'useCallback memoizes functions, useMemo memoizes values',
      'useMemo memoizes functions, useCallback memoizes values',
      'There is no difference',
      'useCallback is for class components, useMemo is for functional components',
    ],
    correctAnswer: 0,
  },
  {
    id: 14,
    question: 'What is Redux used for?',
    code: '',
    options: ['For component styling', 'For global state management', 'For API calls', 'For form validation'],
    correctAnswer: 1,
  },
  {
    id: 15,
    question: 'What are higher-order components (HOCs)?',
    code: '',
    options: [
      'Components that render other components',
      'Functions that take a component and return a new component',
      'Components with higher state',
      'Components that use hooks',
    ],
    correctAnswer: 1,
  },
  {
    id: 16,
    question: 'What is the purpose of React.Fragment?',
    code: '',
    options: [
      'To create document fragments',
      'To group multiple elements without adding extra nodes to the DOM',
      'To improve performance',
      'To handle errors',
    ],
    correctAnswer: 1,
  },
  {
    id: 17,
    question: 'What is the significance of the dependency array in useEffect?',
    code: '',
    options: [
      'It specifies which props to watch for changes',
      'It determines when the effect should run',
      'It lists required dependencies for the component',
      'It improves performance',
    ],
    correctAnswer: 1,
  },
  {
    id: 18,
    question: 'What is server-side rendering in React?',
    code: '',
    options: [
      'Rendering components on the server before sending to client',
      'A way to optimize images',
      'A database rendering technique',
      'A method for API calls',
    ],
    correctAnswer: 0,
  },
  {
    id: 19,
    question: 'What is the purpose of the useReducer hook?',
    code: '',
    options: ['For managing complex state logic', 'For API calls', 'For form validation', 'For component styling'],
    correctAnswer: 0,
  },
  {
    id: 20,
    question: 'What is React.memo used for?',
    code: '',
    options: [
      'For memoizing API responses',
      'For preventing unnecessary re-renders of functional components',
      'For creating memo components',
      'For state management',
    ],
    correctAnswer: 1,
  },
  {
    id: 21,
    question: 'What is the purpose of error boundaries in React?',
    code: '',
    options: [
      'To catch JavaScript errors in components',
      'To handle API errors',
      'To validate forms',
      'To style error messages',
    ],
    correctAnswer: 0,
  },
  {
    id: 22,
    question: 'What is the difference between state and props?',
    code: '',
    options: [
      'State is mutable, props are immutable',
      'Props are mutable, state is immutable',
      'There is no difference',
      'State is for functional components, props are for class components',
    ],
    correctAnswer: 0,
  },
  {
    id: 23,
    question: 'What is the purpose of the useContext hook?',
    code: '',
    options: [
      'To create context',
      'To consume context in functional components',
      'To provide context',
      'To replace Redux',
    ],
    correctAnswer: 1,
  },
  {
    id: 24,
    question: 'What is the significance of keys in React?',
    code: '',
    options: [
      'They help React identify which items have changed',
      'They encrypt component data',
      'They improve styling',
      'They handle form submissions',
    ],
    correctAnswer: 0,
  },
  {
    id: 25,
    question: 'What is the purpose of React portals?',
    code: '',
    options: [
      'To render children into a DOM node outside the parent component',
      'To create navigation portals',
      'To handle API gateways',
      'To style components',
    ],
    correctAnswer: 0,
  },
  {
    id: 26,
    question: 'What is the difference between useEffect and useLayoutEffect?',
    code: '',
    options: [
      'useEffect runs after render, useLayoutEffect runs before paint',
      'useLayoutEffect is for class components',
      'There is no difference',
      'useEffect is for layout, useLayoutEffect is for effects',
    ],
    correctAnswer: 0,
  },
  {
    id: 27,
    question: 'What is the purpose of custom hooks?',
    code: '',
    options: [
      'To create custom components',
      'To extract component logic into reusable functions',
      'To style components',
      'To replace Redux',
    ],
    correctAnswer: 1,
  },
  {
    id: 28,
    question: 'What is code splitting in React?',
    code: '',
    options: [
      'A way to split code into multiple files',
      'A technique to load only the necessary code for the current view',
      'A method for debugging',
      'A way to organize components',
    ],
    correctAnswer: 1,
  },
  {
    id: 29,
    question: 'What is the purpose of the useRef hook?',
    code: '',
    options: [
      'To create references to DOM elements or persist values between renders',
      'To manage state',
      'To handle API calls',
      'To create refactoring tools',
    ],
    correctAnswer: 0,
  },
  {
    id: 30,
    question: 'What is React suspense used for?',
    code: '',
    options: [
      'For handling API suspense',
      'For managing loading states in async operations',
      'For error handling',
      'For state management',
    ],
    correctAnswer: 1,
  },
];
